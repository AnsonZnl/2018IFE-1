{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/conf/sourceData.js","webpack:///./src/js/conf/formConfig.js","webpack:///./src/js/chart.js","webpack:///./src/js/table.js","webpack:///./src/js/data.js","webpack:///./src/js/form.js","webpack:///./src/app.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","default","object","property","prototype","hasOwnProperty","p","s","e","t","product","region","sale","title","type","checked","options","key","a","length","writable","Array","isArray","from","chart","data","container","TypeError","this","width","height","axisPadding","axisMaxY","axisMaxX","barPadding","xDataLength","barWidth","axisTextX","push","colorMain","colorAxis","fontSize","innerHTML","svg","document","getElementById","canvas","canvasInit","setData","arr","arrLength","apply","_toConsumableArray","arrMax","Math","max","maxY","padding","coordinate","child","childLength","j","y","x","color","buildSvg","clearCanvas","buildCanvasLine","getContext","ctx","maxX","strokeStyle","beginPath","moveTo","lineTo","stroke","closePath","font","lineWidth","textAlign","textBaseline","fillText","fillStyle","clearRect","save","restore","toString","item","arc","PI","fill","bar","buildSvgBar","axis","buildSvgAxis","rect","childBarX","join","chartHtml","theadTpl","thTpl","tdTpl","table","formConfig","attr","attrLength","config","th","replace","attrFirstKey","buildTable","buildHtml","tr","trIndex","items","td","buildTheadTpl","tpl","dataKey","firstKey","oKey","test","_typeof","oKeyType","valueType","okey","keyl","htmlArr","arguments","currentData","json","concat","term","indexOf","splice","newArr","values","keyValue","form","formValue","buildFormItem","checkAll","setAllChecked","conf","html","option","text","input","querySelectorAll","checkedValue","isChecked","querySelector","u","oChart","Chart","oTable","Table","oForm","Form","oData","Data","sourceData","addEventListener","target","targetValueLength","getCheckedInput","setValue","getValueByName","regionLength","productLength","soleKey","filterData","getForm","result","groupByKey","getValueList","currentIndex","tagName","toUpperCase","parentNode","dataset","index","getData"],"mappings":"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","file":"app.06be1b9620a60174baa0.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","// 假数据\r\nlet sourceData = [{\r\n  product: \"手机\",\r\n  region: \"华东\",\r\n  sale: [120, 100, 140, 160, 180, 185, 190, 210, 230, 245, 255, 270]\r\n}, {\r\n  product: \"手机\",\r\n  region: \"华北\",\r\n  sale: [80, 70, 90, 110, 130, 145, 150, 160, 170, 185, 190, 200]\r\n}, {\r\n  product: \"手机\",\r\n  region: \"华南\",\r\n  sale: [220, 200, 240, 250, 260, 270, 280, 295, 310, 335, 355, 380]\r\n}, {\r\n  product: \"笔记本\",\r\n  region: \"华东\",\r\n  sale: [50, 60, 80, 110, 30, 20, 70, 30, 420, 30, 20, 20]\r\n}, {\r\n  product: \"笔记本\",\r\n  region: \"华北\",\r\n  sale: [30, 35, 50, 70, 20, 15, 30, 50, 710, 130, 20, 20]\r\n}, {\r\n  product: \"笔记本\",\r\n  region: \"华南\",\r\n  sale: [80, 120, 130, 140, 70, 75, 120, 90, 550, 120, 110, 100]\r\n}, {\r\n  product: \"智能音箱\",\r\n  region: \"华东\",\r\n  sale: [10, 30, 4, 5, 6, 5, 4, 5, 6, 5, 5, 25]\r\n}, {\r\n  product: \"智能音箱\",\r\n  region: \"华北\",\r\n  sale: [15, 50, 15, 15, 12, 11, 11, 12, 12, 14, 12, 40]\r\n}, {\r\n  product: \"智能音箱\",\r\n  region: \"华南\",\r\n  sale: [10, 40, 10, 6, 5, 6, 8, 6, 6, 6, 7, 26]\r\n}]\r\n\r\nexport default sourceData;","\r\n// 表单配置\r\nexport default {\r\n  product: {\r\n    title: '商品类型',\r\n    name: '商品',\r\n    type: 'checkbox',\r\n    checked: true, // 是否默认全选\r\n    options: [\r\n      {\r\n        value: '手机',\r\n        key: '1',\r\n      },\r\n      {\r\n        value: '笔记本',\r\n        key: '2',\r\n      },\r\n      {\r\n        value: '智能音箱',\r\n        key: '3',\r\n      },\r\n    ]\r\n  },\r\n  region: {\r\n    title: '地区',\r\n    name: '地区',\r\n    type: 'checkbox',\r\n    checked: true, // 是否默认全选\r\n    options: [\r\n      {\r\n        value: '华东',\r\n        key: '1',\r\n      },\r\n      {\r\n        value: '华南',\r\n        key: '2',\r\n      },\r\n      {\r\n        value: '华北',\r\n        key: '3',\r\n      },\r\n    ],\r\n  },\r\n};","/*\r\n* 图表模块\r\n* 用图表的形式展现数据\r\n*/\r\n\r\n// 图表\r\nclass chart {\r\n  constructor(data, container) {\r\n    if (!container) return false;\r\n    // 图表宽度\r\n    this.width = 600;\r\n    // 图表高度\r\n    this.height = 200;\r\n    // 坐标轴的偏移，两边留白\r\n    this.axisPadding = 25;\r\n    // Y轴最大高度\r\n    this.axisMaxY = this.height - this.axisPadding * 1.5;\r\n    // X轴最大宽度\r\n    this.axisMaxX = this.width - this.axisPadding;\r\n    // 柱子间隔\r\n    this.barPadding = 10;\r\n    // X轴数据量\r\n    this.xDataLength = 12;\r\n    // 柱子块宽度/canvas数据距离\r\n    this.barWidth = (this.axisMaxX - (this.xDataLength * this.barPadding)) / this.xDataLength;\r\n    // 坐标轴x的位置\r\n    this.axisTextX = [];\r\n    for (let i = 0; i < this.xDataLength; i += 1) {\r\n      this.axisTextX.push((i + 1) * (this.barWidth + this.barPadding) + this.axisPadding - this.barWidth / 2);\r\n    }\r\n    // 重要高亮色\r\n    this.colorMain = ['#FF8BAC', '#E8C573', '#91FF8B', '#4F96E8', '#FF84ED', '#A1C2FF', '#AF73E8', '#E8A073', '#FFE27E'];\r\n    // 坐标轴颜色\r\n    this.colorAxis = '#333';\r\n    // 坐标轴字体大小\r\n    this.fontSize = 12;\r\n    // 添加到DOM页面上\r\n    container.innerHTML = `<canvas id=\"canvas\" width=\"${this.width}\" height=\"${this.height}\"></canvas> \\\r\n    <svg id=\"svg\" viexBox=\"0, 0, ${this.width}, ${this.height}\"></svg>`;\r\n    // svg\r\n    this.svg = document.getElementById('svg');\r\n    // canvas\r\n    this.canvas = document.getElementById('canvas');\r\n    // 渲染canvas坐标轴\r\n    this.canvasInit();\r\n    if (data) this.setData(data);\r\n  }\r\n  setData(data) {\r\n    if (!data || data === this.arr || !data.length) return false;\r\n    // 数组长度\r\n    this.arrLength = data.length;\r\n    // 数据最大值, 判断一条/多条数据\r\n    if (typeof data[0] != 'number') {\r\n      const arr = [];\r\n      const length = data.length;\r\n      for (let i = 0; i < length; i += 1) {\r\n        arr.push(...data[i]);\r\n      }\r\n      this.arrMax = Math.max(...arr);\r\n    } else {\r\n      this.arrMax = Math.max(...data);\r\n    }\r\n\r\n    // 计算坐标轴\r\n    const maxY = this.axisMaxY;\r\n    const arrMax = this.arrMax;\r\n    const width = this.barPadding + this.barWidth; // 每一块数据的距离\r\n    const padding = this.axisPadding;\r\n    const barWidth = this.barWidth;\r\n    const colorMain = this.colorMain;\r\n    const axisTextX = this.axisTextX;\r\n    this.coordinate = [];\r\n    // 数据坐标\r\n    for (let i = 0; i <  this.arrLength; i += 1) {\r\n      if (typeof data[i] != 'number') {\r\n        const child = data[i];\r\n        const childLength = child.length;\r\n        const arr = []\r\n        for (let j = 0; j < childLength; j += 1) {\r\n          // 数据高度\r\n          const y = maxY - (child[j] / arrMax) * (maxY - padding / 2);\r\n          const x = axisTextX[j];\r\n          arr.push({\r\n            x,\r\n            y,\r\n            color: colorMain[i]\r\n          });\r\n        }\r\n        this.coordinate.push(arr);\r\n      } else {\r\n        // 数据高度\r\n        const y = maxY - (data[i] / arrMax) * (maxY - padding / 2);\r\n        const x = axisTextX[i];\r\n        this.coordinate.push({\r\n          x,\r\n          y,\r\n        });\r\n      }\r\n    }\r\n    // 渲染svg\r\n    this.buildSvg(data);\r\n    this.clearCanvas();\r\n    this.buildCanvasLine(this.coordinate, data);\r\n  }\r\n  // canvas坐标轴/初始化\r\n  canvasInit() {\r\n    if (!this.canvas.getContext) return false;\r\n    const ctx = canvas.getContext('2d');\r\n    const padding = this.axisPadding;\r\n    const maxY = this.axisMaxY + padding / 2;\r\n    const maxX = this.width;\r\n    \r\n    ctx.strokeStyle = this.colorAxis;\r\n    ctx.beginPath();\r\n    // Y轴\r\n    ctx.moveTo(padding, maxY);\r\n    ctx.lineTo(padding, 0);\r\n    // X轴\r\n    ctx.moveTo(padding, maxY);\r\n    ctx.lineTo(maxX, maxY);\r\n    ctx.stroke();\r\n    ctx.closePath();\r\n\r\n    ctx.font = `${this.fontSize}px`;\r\n    ctx.lineWidth = 2;\r\n    ctx.textAlign = 'center';\r\n    ctx.textBaseline = 'top';\r\n    ctx.fillText('0', padding / 2, maxY);\r\n    // x轴坐标文字\r\n    const axisTextX = this.axisTextX;\r\n    const length = axisTextX.length;\r\n    for (let i = 0; i < length; i += 1) {\r\n      ctx.fillText(`${i + 1}月`, axisTextX[i], maxY);\r\n    }\r\n    ctx.strokeStyle = this.colorMain[0];\r\n    ctx.fillStyle = this.colorMain[0];\r\n  }\r\n  clearCanvas() {\r\n    if (!this.canvas.getContext) return false;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    // 清空旧的\r\n    const padding = this.axisPadding;\r\n    ctx.clearRect(padding + 1, 0, this.axisMaxX, this.axisMaxY + padding / 2 - 1);\r\n    ctx.clearRect(0, 0, padding - 5, padding / 2 + this.fontSize);\r\n  }\r\n  // 画canvas折线\r\n  buildCanvasLine(coordinate, arr, color) {\r\n    if (!this.canvas.getContext) return false;\r\n    const ctx = canvas.getContext('2d');\r\n    const padding = this.axisPadding;\r\n\r\n    const length = coordinate.length;\r\n\r\n    // Y最大值\r\n    ctx.save();\r\n    ctx.fillStyle = this.colorAxis;\r\n    ctx.textAlign = 'end';\r\n    ctx.textBaseline = 'middle';\r\n    ctx.fillText(this.arrMax, padding - 5, padding / 2);\r\n    ctx.restore();\r\n\r\n    ctx.save();\r\n    for (let i = 0; i < length; i += 1) {\r\n      if (Object.prototype.toString.call(coordinate[i]) === '[object Array]') {\r\n        const child = coordinate[i];\r\n        const childLength = child.length;\r\n        for (let j = 0; j < childLength; j += 1) {\r\n          const item = child[j];\r\n          const color = item.color;\r\n          if (color) {\r\n            ctx.fillStyle = color;\r\n            ctx.strokeStyle = color;\r\n          }\r\n          // 画圆点\r\n          ctx.beginPath();\r\n          ctx.arc(item.x, item.y, 2, 0, 2 * Math.PI);\r\n          ctx.fill();\r\n          // 连线\r\n          if (j - 1 >= 0) ctx.moveTo(child[j - 1].x, child[j - 1].y);\r\n          ctx.lineTo(item.x, item.y);\r\n          ctx.stroke();\r\n          ctx.closePath();\r\n        }\r\n      } else {\r\n        const item = coordinate[i];\r\n        // 画圆点\r\n        ctx.beginPath();\r\n        ctx.arc(item.x, item.y, 5, 0, 2 * Math.PI);\r\n        ctx.fill();\r\n        // 连线\r\n        if (i - 1 >= 0) ctx.moveTo(coordinate[i - 1].x, coordinate[i - 1].y);\r\n        ctx.lineTo(item.x, item.y);\r\n        ctx.stroke();\r\n        // 数字文案\r\n        ctx.fillText(arr[i], item.x, item.y + 5);\r\n        ctx.closePath();\r\n      }\r\n    }\r\n    ctx.restore();\r\n  }\r\n  // 生成SVG\r\n  buildSvg(data) {\r\n    // 柱状图\r\n    const bar = this.buildSvgBar();\r\n    // 坐标轴\r\n    const axis = this.buildSvgAxis(data);\r\n    this.svg.innerHTML = bar + axis;\r\n  }\r\n  // 生成柱子\r\n  buildSvgBar() {\r\n    const axisMaxY = this.axisMaxY;\r\n    const barWidth = this.barWidth;\r\n    const padding = this.axisPadding;\r\n    const colorMain = this.colorMain[0];\r\n\r\n    // 坐标组\r\n    const coordinate = this.coordinate;\r\n    const length = coordinate.length;\r\n    const rect = [];\r\n    // 遍历生成柱状图\r\n    for (let i = 0; i < length; i += 1) {\r\n      if (Object.prototype.toString.call(coordinate[i]) === '[object Array]') {\r\n        const child = coordinate[i];\r\n        const childLength = child.length;\r\n        const childBarX = barWidth / length * i;\r\n        for (let j = 0; j < childLength; j += 1) {\r\n          rect.push(`<rect x=\"${child[j].x + childBarX - barWidth / 2}\" y=\"${child[j].y}\" width=\"${barWidth / length}\" height=\"${axisMaxY - child[j].y + padding / 2}\" fill=\"${child[j].color || colorMain}\"/>`);\r\n        }\r\n      } else {\r\n        rect.push(`<rect x=\"${coordinate[i].x - barWidth / 2}\" y=\"${coordinate[i].y}\" width=\"${barWidth}\" height=\"${axisMaxY - coordinate[i].y + padding / 2}\" fill=\"${coordinate[i].color || colorMain}\"/>`);\r\n      }\r\n    }\r\n    return rect.join('');\r\n  }\r\n  // 生成坐标轴\r\n  buildSvgAxis() {\r\n    const axis = [];\r\n    const axisPadding = this.axisPadding;\r\n    const maxY = this.axisMaxY + axisPadding / 2;\r\n    const colorAxis = this.colorAxis;\r\n    const width = this.width;\r\n    const height = this.height;\r\n    const fontSize = this.fontSize;\r\n    const barPadding = this.barPadding;\r\n    // x轴\r\n    axis.push(`<line x1=\"${axisPadding}\" y1=\"${maxY}\" x2=\"${width}\" y2=\"${maxY}\" stroke=\"${colorAxis}\" stroke-width=\"1\"/>`); \r\n    // y轴\r\n    axis.push(`<line x1=\"${axisPadding}\" y1=\"${maxY}\" x2=\"${axisPadding}\" y2=\"0\" stroke=\"${colorAxis}\" stroke-width=\"1\"/>`);\r\n    // 原点坐标\r\n    axis.push(`<text x=\"${axisPadding}\" y=\"${height - fontSize}\" text-anchor=\"end\" fill=\"${colorAxis}\" style=\"font-size: ${fontSize}px\">0</text>`);\r\n    // y轴文字\r\n    axis.push(`<text x=\"${axisPadding - 5}\" y=\"${axisPadding / 2 + fontSize / 2}\" text-anchor=\"end\" fill=\"${colorAxis}\" style=\"font-size: ${fontSize}px\">${this.arrMax}</text>`);\r\n    // x轴文字\r\n    const axisTextX = this.axisTextX;\r\n    const length = axisTextX.length;\r\n    const barWidth = this.barWidth;\r\n    for (let i = 0; i < length; i += 1) {\r\n      axis.push(`<text x=\"${axisTextX[i]}\" y=\"${height - fontSize}\" fill=${colorAxis}\" text-anchor=\"middle\"  style=\"font-size: ${fontSize}px\">${i + 1}月</text>`);\r\n    }\r\n    return axis.join('');\r\n  }\r\n  // 生成图表\r\n  buildChart() {\r\n    let chartHtml = this.buildSvg();\r\n    if (!this.ctx) chartHtml += this.canvas;\r\n    return chartHtml;\r\n  }\r\n}\r\nexport default chart;","/*\r\n* 表格模块\r\n* 用表格的形式展现数据\r\n*/\r\n\r\n// 表格渲染模版\r\nconst tableTpl = '<tr>{{th}}</tr>{{tr}}';\r\nlet theadTpl = '<tr>{{variable}}{{fixed}}</tr>';\r\nconst thTpl = '<th>{{name}}</th>';\r\nconst trTpl = '<tr data-index=\"{{index}}\">{{td}}</tr>';\r\nconst tdTpl = '<td>{{value}}</td>';\r\n\r\nclass table {\r\n  constructor(data, container, formConfig) {\r\n    if (!container) return false;\r\n    this.table = document.getElementById('table');\r\n    if (!this.table) {\r\n      container.innerHTML = '<table id=\"table\" border=1></table>';\r\n      this.table = document.getElementById('table');\r\n    }\r\n\r\n    // 用于控制除月份外表格数据显示顺序\r\n    this.attr = [];\r\n    this.attrLength = 0;\r\n    \r\n    // 表单配置\r\n    this.config = formConfig;\r\n    // 遍历配置生成表格th不变部分顺序及储存关键属性\r\n    const th = [];\r\n    for(const key in formConfig) {\r\n      this.attr.push(key);\r\n    }\r\n    // 月份\r\n    for (let i = 0; i < 12; i += 1) {\r\n      th.push(thTpl.replace('{{name}}', `${i + 1}月`));\r\n    }\r\n    theadTpl = theadTpl.replace('{{fixed}}', th.join(''));\r\n    // 记录属性长度\r\n    this.attrLength = this.attr.length;\r\n    if (data) this.setData(data);\r\n  }\r\n  setData(data, key) {\r\n    if (!data) return false;\r\n    this.data = data;\r\n    this.attrFirstKey = key;\r\n    this.table.innerHTML = this.buildTable(data);\r\n  }\r\n  // 生成表格th关键属性部分, key为第一列属性\r\n  buildTheadTpl() { \r\n    // console.log(thArr)\r\n    const th = [];\r\n    const key = this.attrFirstKey;\r\n    const config = this.config;\r\n    const buildHtml = this.buildHtml;\r\n    const attr = this.attr;\r\n    if (config[key]) th.push(buildHtml(thTpl, '{{name}}', config[key].name));\r\n    for (let i = 0; i < this.attrLength; i += 1) {\r\n      if (attr[i] !== key) th.push(buildHtml(thTpl, '{{name}}', config[attr[i]].name));\r\n    }\r\n  \r\n    return buildHtml(theadTpl, '{{variable}}', th.join(''));\r\n  }\r\n  // 生成table\r\n  // 若有key 按key划分数据\r\n  buildTable (data) {\r\n    if (!data) return '';\r\n    // const l = data.length;\r\n    const tr = [];\r\n    const key = this.attrFirstKey;\r\n    const config = this.config;\r\n    const buildHtml = this.buildHtml;\r\n    const attr = this.attr;\r\n    // 遍历数据\r\n    let trIndex = 0;\r\n    for (const i in data) {\r\n      const items = data[i];\r\n      const l = items.length;\r\n      // 按分组遍历数据\r\n      for (let j = 0; j < l; j += 1) {\r\n        const td = [];\r\n        // 遍历非月份外属性生成html\r\n        td.push(...buildHtml(tdTpl, '{{value}}', items[j], attr, key));\r\n        // 月份数据生成html\r\n        td.push(...buildHtml(tdTpl, '{{value}}', items[j].sale))\r\n        // 处理table合并td\r\n        if (j === 0) {\r\n          td[0] = td[0].replace('<td>', `<td rowspan=\"${l}\">`);\r\n        } else {\r\n          td[0] = '';\r\n        }\r\n        tr.push(buildHtml(buildHtml(trTpl, '{{index}}', trIndex), '{{td}}', td.join('')));\r\n        trIndex += 1;\r\n      }\r\n    }\r\n    const tpl = buildHtml(tableTpl, '{{th}}', this.buildTheadTpl(key));\r\n    return buildHtml(tpl, '{{tr}}', tr.join(''));\r\n  }\r\n  // 替换模版关键字并返回\r\n  // value为数组或对象或字符串，若value为数组，遍历返回组装返回数组，\r\n  // oKey控制是否用value的某(些）属性替换\r\n  // firstKey 第一列\r\n  buildHtml(tpl, key, data, dataKey, firstKey) {\r\n    if (!tpl || !key) return '';\r\n    let value = data;\r\n    let oKey = dataKey;\r\n    if (/boolean|string|number/.test(typeof value)) return tpl.replace(key, value);\r\n    // 获取data和 dataKey的类型\r\n    const oKeyType = Object.prototype.toString.call(oKey);\r\n    const valueType = Object.prototype.toString.call(value);\r\n    if (valueType === '[object Object]') {\r\n      // 若oKey为数组，将value处理成数组，进入遍历\r\n      switch (oKeyType) {\r\n        case /\\[object (String|Boolean|Number)\\]/:\r\n          return tpl.replace(key, value[okey]);\r\n        case '[object Array]':\r\n          value = [value];\r\n          break;\r\n        default:\r\n          return tpl.replace(key, value);\r\n      }\r\n    } else if (valueType !== '[object Array]') {\r\n      return false;\r\n    }\r\n    // 处理okey成数组,方便统一遍历\r\n    if (oKeyType !== '[object Array]' && /boolean|string|number/.test(typeof oKey)) oKey = [oKey];\r\n    const l = value.length;\r\n    const keyl = oKey ? oKey.length : 0;\r\n    const htmlArr = [];\r\n    for (let i = 0; i < l; i += 1) {\r\n      if (!value[i] || !oKey) {\r\n        htmlArr.push(tpl.replace(key, value[i]));\r\n        continue;\r\n      }\r\n      if (firstKey) htmlArr.push(tpl.replace(key, value[i][firstKey]));\r\n      for (let j = 0; j < keyl; j += 1) {\r\n        if (oKey[j] !== firstKey) htmlArr.push(tpl.replace(key, value[i][oKey[j]]));\r\n      } \r\n    }\r\n    return htmlArr;\r\n  }\r\n}\r\n\r\nexport default table;","/*\r\n* 数据处理模块\r\n* 根据用户的输入，对数据进行组合，提供给页面展现\r\n*/\r\n\r\nclass data {\r\n  constructor(data = []) {\r\n    this.data = data;\r\n    this.currentData = data;\r\n  }\r\n  // 根据配置筛选数据 返回筛选的数据\r\n  filterData(json) {\r\n    if (!json) return this.data;\r\n    // 拷贝一份数据，遍历数据\r\n    const data = [].concat(this.data);\r\n    let length = data.length;\r\n    for (let i = 0; i < length; i++) {\r\n      // 判断是否符合表单条件\r\n      for (const key in json) {\r\n        const term = json[key];\r\n        // if (term === null) continue;\r\n        if ((Object.prototype.toString.call(term) === '[object Array]' && term.indexOf(data[i][key]) !== -1) || data[i][key] === term) continue;\r\n        // 删除不符合的数据\r\n        data.splice(i, 1);\r\n        length -= 1;\r\n        i -= 1;\r\n        break;\r\n      }\r\n    }\r\n    this.currentData = data;\r\n  }\r\n  // 获取当前选择数据\r\n  getData() {\r\n    return this.currentData;\r\n  }\r\n  // 获取当前选择数据的某个值的列表\r\n  getValueList(key) {\r\n    if (!key) return false;\r\n    const data = this.currentData;\r\n    const length = data.length;\r\n    const arr = [];\r\n    for (let i = 0; i < length; i +=1) {\r\n      arr.push(data[i][key]);\r\n    }\r\n    return arr;\r\n  }\r\n  // 数据分组\r\n  groupByKey(key) {\r\n    data = this.currentData;\r\n    if (!key) return data;\r\n    const length = data.length;\r\n    const newArr = {};\r\n    const values = []; // 用于分组，避免出现中文\r\n    for (let i = 0; i < length; i += 1) {\r\n      if (!data[i]) continue;\r\n      // 以key的数据值为基准划分数组\r\n      const keyValue = data[i][key];\r\n      let j = values.indexOf(keyValue); // 找到分组依据对应的唯一标志\r\n      // 每个新组需要赋值\r\n      if (j === -1) {\r\n        values.push(keyValue);\r\n        j = values.length - 1;\r\n        newArr[j] = [];\r\n      }\r\n      // 将数据添加到对应组\r\n      newArr[j].push(data[i]); \r\n    }\r\n    return newArr\r\n  }\r\n}\r\nexport default data;","/*\r\n* 表单模块\r\n* 承接用户的交互，生成/记录表单\r\n*/\r\n// 表单配置\r\n// html模版\r\nconst titleTpl = '<span class=\"title\">{{title}}</span>';\r\nconst checkboxTpl = '<label for=\"{{name}}_{{key}}\"><input type=\"checkbox\" value=\"{{value}}\" name=\"{{name}}\" id=\"{{name}}_{{key}}\"/>{{text}}</label>';\r\n\r\nclass form {\r\n  constructor(container, formConfig) {\r\n    // 当前表单值\r\n    this.form = container;\r\n    this.config = formConfig;\r\n    this.formValue = {};\r\n    for (const key in formConfig) {\r\n      const type = formConfig[key].type;\r\n      document.getElementById(`${key}-${type}`).innerHTML = this.buildFormItem(formConfig[key], key);\r\n      // 设置全选\r\n      if (type !== 'checkbox' || !formConfig[key].checked) continue;\r\n      this.checkAll(key, true);\r\n      this.setAllChecked(key, true);\r\n    }\r\n  }\r\n  // 生成表单某项html \r\n  buildFormItem(conf, name) {\r\n    if (!conf) return false;\r\n    const html = [\r\n      titleTpl.replace('{{title}}', conf.title),\r\n    ];\r\n    const tpl = checkboxTpl.replace(/{{name}}/g, name);\r\n    if (conf.type === 'checkbox') html.push(tpl.replace(/{{(key|value)}}/gi, 'all').replace(/{{text}}/g, '全选'));\r\n    const options = conf.options;\r\n    const l = options.length;\r\n    for (let i = 0; i < l; i += 1) {\r\n      const option = options[i];\r\n      html.push(tpl.replace(/{{key}}/g, option.key)\r\n        .replace(/{{value}}/g, option.value)\r\n        .replace(/{{text}}/g, option.text || option.value));\r\n    }\r\n    return html.join('');\r\n  }\r\n  // 获取当前表单值\r\n  getForm() {\r\n    return this.formValue;\r\n  };\r\n  // 获取表单Dom内某name属性值\r\n  getValueByName(key) {\r\n    if (!key) return false;\r\n\r\n    // 从配置读取该name对应的控件类型\r\n    switch(this.config[key].type) {\r\n      case 'checkbox':\r\n        // 遍历找出选中的值返回 \r\n        const input = this.form.querySelectorAll(`[name=${key}]:not([value=all])`);\r\n        const l = input.length;\r\n        const checkedValue = [];\r\n        for (let i = 0; i < l; i += 1) {\r\n          if (input[i].checked) checkedValue.push(input[i].value);\r\n        }\r\n        // 处理全选状态\r\n        this.setAllChecked(key, checkedValue.length === l);\r\n        return checkedValue;\r\n      default:\r\n        return this.formValue[key].value;\r\n    }\r\n  }\r\n  // 对表单进行全选/取消全选\r\n  checkAll(key, isChecked) {\r\n    // 遍历相应的控件(排除全选按钮),设置选中状态\r\n    const input = this.form.querySelectorAll(`[name=${key}]:not([value=all])`);\r\n    const l = input.length;\r\n    for (let i = 0; i < l; i += 1) {\r\n      input[i].checked = isChecked;\r\n    }\r\n  }\r\n  // 设置全选选项的选中状态\r\n  setAllChecked(key, isChecked) {\r\n    const input = this.form.querySelector(`#${key}_all`);\r\n    if (!input) return false;\r\n    input.checked = isChecked;\r\n  }\r\n  // 修改form的属性值\r\n  setValue(key, value) {\r\n    if (!key) return false;\r\n    // if (form[key] === value) return flase;\r\n    this.formValue[key] = value;\r\n    return true;\r\n  };\r\n  // 返回选中的input\r\n  getCheckedInput(key) {\r\n    return this.form.querySelectorAll(`input[name=${key}]:checked`);\r\n  }\r\n}\r\nexport default form;","import Form from './js/form.js';\r\nimport Data from './js/data.js';\r\nimport Table from './js/table.js';\r\nimport Chart from './js/chart.js';\r\n// 表单配置\r\nimport formConfig from './js/conf/formConfig.js';\r\n // 假数据\r\nimport sourceData from './js/conf/sourceData.js';\r\n\r\n// 图表创建\r\nconst oChart = new Chart(null, document.getElementById('chart-wrapper'));\r\n// 表格创建\r\nconst oTable = new Table(null, document.getElementById('table-wrapper'), formConfig);\r\n// 表格创建\r\nconst oForm = new Form(document.getElementById('option-form'), formConfig);\r\n// 数据创建\r\nconst oData = new Data(sourceData);\r\n\r\n// 监听表单变更\r\ndocument.getElementById('option-form').addEventListener('change', (e) => {\r\n  // 记录储存新的变更\r\n  const target = e.target;\r\n  const key = target.name;\r\n  if (!key) return false;\r\n  // 全选按钮\r\n  if(target.value === 'all') {\r\n    // 不给取消全选\r\n    if (!target.checked) return target.checked = true;\r\n    oForm.checkAll(key, target.checked);\r\n  }\r\n  // 不给一个不选\r\n  const targetValueLength = oForm.getCheckedInput(key).length;\r\n  if (!target.checked && !targetValueLength) return target.checked = true;\r\n  // 记录表单新值，返回是否变更\r\n  const isChange = oForm.setValue(key, oForm.getValueByName(key));\r\n  if (!isChange) return false;\r\n  // 根据新数据渲染表格\r\n  // 若地区只选了一个合并地区并且产品选择不止一个，其他情况合并商品选项\r\n  const regionLength = key !== 'region' ? oForm.getCheckedInput('region').length : targetValueLength;\r\n  const productLength = key !== 'product' ? oForm.getCheckedInput('product').length : targetValueLength;\r\n  // 合并的key\r\n  const soleKey = regionLength === 1 && productLength > 1 ? 'region' : 'product';\r\n  // 根据新的表单值筛选符合的数据\r\n  oData.filterData(oForm.getForm());\r\n  const result = oData.groupByKey(soleKey);\r\n  // 渲染表格/图表\r\n  oTable.setData(result, soleKey);\r\n  oChart.setData(oData.getValueList('sale'));\r\n\r\n})\r\n\r\n// 监听表格鼠标事件\r\ndocument.getElementById('table').addEventListener('mouseover', (e) => {\r\n  let currentIndex = null;\r\n  const target = e.target;\r\n  const tagName = target.tagName.toUpperCase();\r\n  if (tagName === 'TD') {\r\n    currentIndex = target.parentNode.dataset['index'];\r\n  }\r\n  if (tagName === 'TR') {\r\n    currentIndex = target.dataset['index'];\r\n  }\r\n  if (currentIndex === null) return false;\r\n  oChart.setData(oData.getData()[currentIndex].sale);\r\n})\r\ndocument.getElementById('table').addEventListener('mouseleave', (e) => {\r\n  oChart.setData(oData.getValueList('sale'));\r\n})\r\n// 初始化页面, 默认显示全部数据\r\nconst init = () => {\r\n  // 初始化各区域显示的\r\n  oData.filterData();\r\n  oTable.setData(oData.groupByKey('product'));\r\n  oChart.setData(oData.getValueList('sale'));\r\n}\r\ninit();"],"sourceRoot":""}